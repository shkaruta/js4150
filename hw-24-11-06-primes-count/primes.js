// Программа принимает число n и выводит в консоль количество простых чисел от 2 до n, включая 2 и n

// преобразуем первый пользовательский аргумент в число с основанием 10 при помощи parseInt
const n = parseInt(process.argv[2], 10); 

// ограничим максимум для поиска простых числом 10 миллионов
const MAX_TO_SEARCH = 10000000

// Проверка входных данных
//если parseInt не смог преобразовать аргумент в число
// если число меньше 2
// если число больше MAX_TO_SEARCH 
// то выводим сообщение об использовании и завершаемся
if (isNaN(n) || n < 2 || n > MAX_TO_SEARCH) {
    console.log("Подсчет количества простых чисел от 2 до введенного числа.\nИспользование: primes.js <number>");
    process.exit(1); 
}

function isPrime(number) {
    // принимает число
    // возвращает 1, если число простое, 0, если не простое
    if (number < 2) return 0; 
    // Проверка делителей до корня числа
    for (let i = 2; i * i <= number; i++) { 
        if (number % i === 0) return 0; // Не простое, если делится на i
    }
    return 1; // Простое число
}

// Основной цикл для подсчета количества простых чисел
let primeCount = 0;
for (let i = 2; i <= n; i++) {
    primeCount += isPrime(i); // Добавляем 1 к счетчику, если число простое
}

console.log(primeCount); // Выводим результат
